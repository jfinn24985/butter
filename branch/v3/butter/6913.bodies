class UmlArtifact
!!!128175.cpp!!!	build_properties(inout a_hdr : unistr, inout a_link : unistr, inout a_flag : unistr, in a_section_label : unistr, in a_not_doc : bool) : void
// Process any data from properties.
QString value_;
if (a_item.property_value (butter_constants::butter_flags_name, value_))
{
  merge_string_list (a_flag, value_);
}
if (a_item.property_value (butter_constants::butter_ldflags_name, value_))
{
  merge_string_list (a_link, value_);
}
if (a_item.property_value (butter_constants::butter_include_name, value_))
{
  merge_string_list (a_hdr, value_);
}
// For non-documents any data from the description.
if (a_not_doc)
{
  QString section_ (section (a_section_label, const_cast< UmlItem& >(a_item).description ()));
  if (section_.isEmpty ())
  {
    section_ = section (butter_constants::generic_section, const_cast< UmlItem& >(a_item).description ());
  }
  if (! section_.isEmpty ())
  {
    QRegExp hdr_re_ ("^ *" + butter_constants::header_label + " *= *");
    QRegExp link_re_ ("^ *" + butter_constants::link_label + " *= *");
    QRegExp flag_re_ ("^ *" + butter_constants::flag_label + " *= *");
    if (! section_.isEmpty ())
    {
      QTextIStream section_is_ (&section_);
      while (! section_is_.atEnd ())
      {
        const QString line_ (section_is_.readLine ());
        int length_;
        if (-1 != hdr_re_.match (line_, 0, &length_))
        {
          merge_string_list (a_hdr, line_.mid (length_));
        }
        else if (-1 != link_re_.match (line_, 0, &length_))
        {
          merge_string_list (a_link, line_.mid (length_));
        }
        else if (-1 != flag_re_.match (line_, 0, &length_))
        {
          merge_string_list (a_flag, line_.mid (length_));
        }
      }
    }
  }
}
