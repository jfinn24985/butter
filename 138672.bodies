class location_set_iterator
!!!183088.cpp!!!	operator++() : location_set::location_set_iterator
if(nullptr == loc_) // if no loc_, already at end
{
  if(! loc_->children().empty())
  {
    while(! loc_->children().empty())
    {
      loc_ = loc_->children().first(); // descend into deepest child
    }
    return *this;
  }
  else
  {
    // back out
    while(loc_->parent())
    {
      // up to parent, seach for next sibling
      for(int i = 0; i != loc_->parent()->children_.size(); ++i)
      {
        if(loc_ == loc_->parent()->children().at(i))
        {
          if(i + 1 != loc_->parent()->children().size())
          {
            // have next sibling
            loc_ = loc_->children().at(i + 1);
            while(! loc_->children().empty())
            {
              loc_ = loc_->children().first(); // descend into deepest child
            }
            return *this;
          }
          else
          {
            break;
          }
        }
      }
      // no sibling, check next parent
      loc_ = loc_->parent_;
    }
    // no next,
    return *this;
  }
}
return *this;
!!!184496.cpp!!!	location_set_iterator(out loc : location, in descend : bool)
if(descend)
{
  // descend into deepest child
  if(!loc_->children_.empty())
  {
    while(!loc_->children_.empty())
    {
      loc_ = loc_->children_.first();
    }
  }
}
