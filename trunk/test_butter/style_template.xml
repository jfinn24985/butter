<style label="make">
 <file label="system.mk">## system.mk
#
# System Makefile
#
##################################
# Defaults for current environment
##################################

-include $(ROOTDIR)/local.mk
OS ?= LINUX
VARIANT ?= DEBUG

SHELL=/bin/sh
.SUFFIXES:

############################
## Default install locations
############################

PREFIX?=$(ROOTDIR)/installdir
EXEC_PREFIX=$(PREFIX)
BINDIR=$(EXEC_PREFIX)/bin
SBINDIR=$(EXEC_PREFIX)/sbin
LIBEXECDIR=$(EXEC_PREFIX)/libexec
LIBDIR=$(EXEC_PREFIX)/lib
DATAROOTDIR=$(PREFIX)/share
DATADIR=$(PREFIX)/share
SYSCONFDIR=$(PREFIX)/etc
SHAREDSTATEDIR=$(PREFIX)/com
LOCALSTATEDIR=$(PREFIX)/var
INCLUDEDIR=$(PREFIX)/include
LOCALEDIR=$(DATAROOTDIR)/locale
DOCDIR=$(DATAROOTDIR)/doc/$(VERSIONDIR)
INFODIR=$(DATAROOTDIR)/info
MANDIR=$(DATAROOTDIR)/man
HTMLDIR=$(DOCDIR)
DVIDIR=$(DOCDIR)
PDFDIR=$(DOCDIR)
PSDIR=$(DOCDIR)
MAN1DIR=$(MANDIR)/man1
MAN2DIR=$(MANDIR)/man2
MAN3DIR=$(MANDIR)/man3
MAN4DIR=$(MANDIR)/man4
MAN5DIR=$(MANDIR)/man5
MAN6DIR=$(MANDIR)/man6
MAN7DIR=$(MANDIR)/man7
MAN8DIR=$(MANDIR)/man8
MANNDIR=$(MANDIR)/mann

# Flags for the install targets.
INSTALL:=install
BINIFLAGS:=-m 755
FILEIFLAGS:=-m 644
LIBIFLAGS:=-m 644 
MANIFLAGS:=-m 644

####################
## OS SPECIFIC STUFF
####################

SUFSRC:=.cc
SUFHDR:=.hh
SUFDEP:=.dep
SUFMAK:=.mk

# Assume unix-like 
SUFOBJ:=.o
SUFEXE:=
SUFLIB:=.a
SUFSHR:=.so.0
ifeq ($(OS),WIN32)
SUFEXE:=.exe
SUFLIB:=.lib
SUFSHR:=.dll
endif

######################
##  Combine flags sets
######################

ifeq ($(VARIANT),DEBUG)
VARIANTFLAGS=$(STDDEBUGFLAGS)
else
VARIANTFLAGS=$(STDOPTFLAGS)
endif

CXXFLAGS=$(VARIANTFLAGS) $(STDCXXFLAGS) $(DEFINES)
LDFLAGS=$(VARIANTFLAGS) $(STDLDFLAGS)

###################################
## Dependency and other Build rules
###################################

%$(SUFDEP): %$(SUFSRC)
	set -e; $(CXX) -MM $(CXXFLAGS) $&lt; \
	| sed 's/\($*\)\.o[ :]*/\1.o $@ : /g' > $@; \
	[ -s $@ ] || rm -f $@

%$(SUFOBJ): %$(SUFSRC)
	$(CXX) $(CXXFLAGS) -c -o $@ $&lt;

#############################################
##  Define standard directory descent targets
##  (required for proper functioning)
#############################################

all:: dopart

install:: doinstall

doit:
	for WORKDIR in $(DIRS); do \
	echo Working on $$WORKDIR; \
	pushd $$WORKDIR;\
	OS="$(OS)" ROOTDIR="$(ROOTDIR)" VARIANT="$(VARIANT)" make $(WHAT); \
	popd;\
	done

dopart:
	WHAT="all" make doit

doinstall:
	WHAT="install" make doit

distclean: clean
	rm -f $(CLEAN_TARGETS)
	WHAT="distclean" make doit

clean: 
	rm -f $(CLEAN_TEMP)
	WHAT="clean" make doit
</file>
 <file label="local.mk">## local.mk.tmpl

OS ?= LINUX
COMP ?= GNU
VARIANT ?= DEBUG
# for installation targets
# VERSIONDIR:="@BASE_PROJECT@-@VERSION@"
# PREFIX?=$(ROOTDIR)/installdir
</file>
 <!-- name of the top-most generated buildfile -->
 <property label="root-file">makefile</property>

 <!-- name of build file in any sub-directories -->
 <property label="build-file">makefile</property>
 <!-- default for install flags -->
 <property label="target_install_location">$(BINDIR)</property>
 <property label="target_install_mode">$(BINIFLAGS)</property>
 <property label="start-phrase">## START:</property>
 <property label="end-phrase">## END:</property>

  <!-- how to make comments -->
 <template label="comment">## <replace label="text"/></template>

 <!-- link to subdirectories -->
 <template label="descendent-link">DIR:=$(DIR) <replace label="path"/>
</template>

 <!-- Start for an external library section -->
 <template label="extern-preamble"/>

 <!-- Actual content for external libraries -->
 <template label="extern-library"><replace label="NAME"/>FLAGS:=<replace label="flags"/>
<replace label="NAME"/>LDFLAGS:=<replace label="ldflags"/>
<replace label="NAME"/>INC:=<replace label="include"/>
</template>

 <!-- how to include an additional buildfile -->
 <template label="include-buildfile">-include <replace label="path"/>.$(SUFMAK)
</template>

 <!-- how to build an object file -->
 <template label="object">
<replace label="name"/>.$(SUFOBJ):: <option label="flags">CXXFLAGS:=$(CXXFLAGS) <replace label="flags"/></option>\
                                    <option label="inc">CXXFLAGS:=$(CXXFLAGS) $(patsubst %,-I%,<replace label="include"/>)</option>
</template>

 <!-- Other target type -->
 <template label="object-other"/>

 <!-- template for a target -->
 <template label="target">
<replace label="NAME"/>SRC:=<replace label="source"/>
<replace label="NAME"/>CXXFLAGS:=$(CXXFLAGS) $(patsubst %,-I%,<replace label="include"/>) <replace label="flags"/>
<replace label="NAME"/>LDFLAGS:=$(LDFLAGS) <replace label="ldflags"/>
<replace label="NAME"/>DINC:=$(filter %.$(SUFDEP), $(<replace label="NAME"/>SRC:.$(SUFSRC)=.$(SUFDEP)))
include $(<replace label="NAME"/>DINC)

<replace label="NAME"/>OBJ:=$(filter %.o, $(<replace label="NAME"/>SRC:.$(SUFSRC)=.$(SUFOBJ)))
CLEAN_TEMP:= $(CLEAN_TEMP) $(<replace label="NAME"/>OBJ)

<replace label="name"/>$(SUFEXE) :: CXXFLAGS:=$(<replace label="NAME"/>CXXFLAGS)
<replace label="name"/>$(SUFEXE) :: $(<replace label="NAME"/>OBJ) | $(<replace label="NAME"/>DINC) 
	$(CXX) $(CXXFLAGS) -o <replace label="name"/>$(SUFEXE) $(<replace label="NAME"/>OBJ) $(<replace label="NAME"/>LDFLAGS)

all :: <replace label="target_name"/>$(SUFEXE)

CLEAN_TARGETS:=$(CLEAN_TARGETS) <replace label="name"/>$(SUFEXE)
</template>

 <!-- template for a target -->
 <template label="target-start"/>

 <!-- template for a target -->
 <template label="target-install"/>




 <!-- template for start of root makefile -->
 <template label="root-preamble"><option label="rootdir">export ROOTDIR:=<replace label="location_root"/></option>
include $(ROOTDIR)/system.mk
</template>

 <!-- template for start of subdirectory makefiles -->
 <template label="preamble">
include $(ROOTDIR)/system.mk
</template>

 <!-- template for start of (internal) package -->
 <template label="package">
<option label="SYSINCLUDE">export SYSINCLUDE:= <replace label="package_includes"/>
</option><option label="SYSCFLAGS">export SYSCFLAGS:= <replace label="package_cflags"/>
</option><option label="SYSCXXFLAGS">export SYSCXXFLAGS:= <replace label="package_c++flags"/>
</option><option label="SYSFFLAGS">export SYSFFLAGS:= <replace label="package_fflags"/>
</option><option label="SYSLDFLAGS">export SYSLDFLAGS:= <replace label="package_ldflags"/>
</option>
</template>


 <template label="install-target">
install:: <replace label="target_name"/>$(SUFEXE)
<option label="where">	$(INSTALL) -d <replace label="target_install_location"/>
</option><option label="install">	$(INSTALL) <replace label="target_install_mode"/> $&lt; <replace label="target_install_location"/>/$&lt;
</option>
</template>
 <template label="sublocation">
  DIRS:= $(DIRS) <replace label="location_dir"/></template>
 <!-- template name="buildfile">content</template>
 <template name="internal-project">content</template>
 <template name="external-project">content</template>
 <template name="object">content</template>
 <template name="executable">content</template>
 <template name="library">content</template>
 <template name="shared">content</template -->
</style>

