class UmlBasePackage
!!!180992.cpp!!!	create(inout parent : UmlPackage, in name : str) : UmlPackage
  return (UmlPackage *) parent->create_(aPackage, name);
!!!180992.java!!!	create(inout parent : UmlPackage, in name : str) : UmlPackage
  return (UmlPackage) parent.create_(anItemKind.aPackage, name);
!!!181120.cpp!!!	kind() : anItemKind
  return aPackage;
!!!181120.java!!!	kind() : anItemKind
  return anItemKind.aPackage;
!!!181248.cpp!!!	associatedDiagram() : UmlDiagram
  read_if_needed_();
  
  return _assoc_diagram;
!!!181248.java!!!	associatedDiagram() : UmlDiagram
  read_if_needed_();
  
  return _assoc_diagram;
!!!181376.cpp!!!	set_AssociatedDiagram(inout d : UmlDiagram) : bool
  UmlCom::send_cmd(_identifier, setAssocDiagramCmd, (d == 0) ? (void *) 0 : ((UmlBaseItem *) d)->_identifier);
  if (UmlCom::read_bool()) {
    _assoc_diagram = d;
    return TRUE;
  }
  else
    return FALSE;
!!!181376.java!!!	set_AssociatedDiagram(inout d : UmlDiagram) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setAssocDiagramCmd,
		  (d == null) ? (long) 0 : d.identifier_());
  UmlCom.check();
  
  _assoc_diagram = d;

!!!181504.cpp!!!	importProject(in fn : string) : UmlPackage
  UmlCom::send_cmd(_identifier, importProjectCmd, fn);

  return (UmlPackage *) UmlBaseItem::read_();
!!!181504.java!!!	importProject(in fn : string) : UmlPackage
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.importProjectCmd, fn);
  return (UmlPackage) UmlBaseItem.read_();
!!!181632.cpp!!!	cppSrcDir() : string
  read_if_needed_();
  
  return _cpp_src_dir;
!!!181632.java!!!	cppSrcDir() : string
  read_if_needed_();
  
  return _cpp_src_dir;
!!!181760.cpp!!!	set_CppSrcDir(in s : string) : bool
  return set_it_(_cpp_src_dir, s, setCppSrcDirCmd);
!!!181760.java!!!	set_CppSrcDir(in s : string) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setCppSrcDirCmd, s);
  UmlCom.check();

  _cpp_src_dir = s;
!!!181888.cpp!!!	cppHDir() : string
  read_if_needed_();
  
  return _cpp_h_dir;
!!!181888.java!!!	cppHDir() : string
  read_if_needed_();
  
  return _cpp_h_dir;
!!!182016.cpp!!!	set_CppHDir(in s : string) : bool
  return set_it_(_cpp_h_dir, s, setCppHDirCmd);
!!!182016.java!!!	set_CppHDir(in s : string) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setCppHDirCmd, s);
  UmlCom.check();

  _cpp_h_dir = s;
!!!182144.cpp!!!	cppNamespace() : string
  read_if_needed_();
  
  return _cpp_namespace;
!!!182144.java!!!	cppNamespace() : string
  read_if_needed_();
  
  return _cpp_namespace;
!!!182272.cpp!!!	set_CppNamespace(in s : string) : bool
  return set_it_(_cpp_namespace, s, setCppNamespaceCmd);
!!!182272.java!!!	set_CppNamespace(in s : string) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setCppNamespaceCmd, s);
  UmlCom.check();

  _cpp_namespace = s;
!!!182400.cpp!!!	findCppNamespace(in n : string) : UmlPackage
  UmlCom::send_cmd(packageGlobalCmd, findCppNamespaceCmd, _identifier, n);
  
  return (UmlPackage *) UmlBaseItem::read_();  
!!!182400.java!!!	findCppNamespace(in n : string) : UmlPackage
  UmlCom.send_cmd(CmdFamily.packageGlobalCmd, PackageGlobalCmd._findCppNamespaceCmd,
		  identifier_(), n);
  
  return (UmlPackage) UmlBaseItem.read_();  
!!!182528.cpp!!!	javaDir() : string
  read_if_needed_();
  
  return _java_dir;
!!!182528.java!!!	javaDir() : string
  read_if_needed_();
  
  return _java_dir;
!!!182656.cpp!!!	set_JavaDir(in s : string) : bool
  return set_it_(_java_dir, s, setJavaDirCmd);
!!!182656.java!!!	set_JavaDir(in s : string) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setJavaDirCmd, s);
  UmlCom.check();

  _java_dir = s;
!!!182784.cpp!!!	javaPackage() : string
  read_if_needed_();
  
  return _java_package;
!!!182784.java!!!	javaPackage() : string
  read_if_needed_();
  
  return _java_package;
!!!182912.cpp!!!	set_JavaPackage(in s : string) : bool
  return set_it_(_java_package, s, setJavaPackageCmd);
!!!182912.java!!!	set_JavaPackage(in s : string) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setJavaPackageCmd, s);
  UmlCom.check();

  _java_package = s;
!!!183040.cpp!!!	findJavaPackage(in n : string) : UmlPackage
  UmlCom::send_cmd(packageGlobalCmd, findJavaPackageCmd, _identifier, n);
  
  return (UmlPackage *) UmlBaseItem::read_();  
!!!183040.java!!!	findJavaPackage(in n : string) : UmlPackage
  UmlCom.send_cmd(CmdFamily.packageGlobalCmd, PackageGlobalCmd._findJavaPackageCmd,
		  identifier_(), n);
  
  return (UmlPackage) UmlBaseItem.read_();  
!!!183168.cpp!!!	phpDir() : string
  read_if_needed_();
  
  return _php_dir;
!!!183168.java!!!	phpDir() : string
  read_if_needed_();
  
  return _php_dir;
!!!183296.cpp!!!	set_PhpDir(in s : string) : bool
  return set_it_(_php_dir, s, setPhpDirCmd);
!!!183296.java!!!	set_PhpDir(in s : string) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setPhpDirCmd, s);
  UmlCom.check();

  _php_dir = s;
!!!183424.cpp!!!	phpNamespace() : string
  read_if_needed_();

  return _php_namespace;
!!!183424.java!!!	phpNamespace() : string
  read_if_needed_();

  return _php_namespace;
!!!183552.cpp!!!	set_PhpNamespace(in v : string) : bool
  return set_it_(_php_namespace, v, setPhpNamespaceCmd);
!!!183552.java!!!	set_PhpNamespace(in v : string) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setPhpNamespaceCmd, v);
  UmlCom.check();

  _php_namespace = v;
!!!183680.cpp!!!	findPhpNamespace(in n : string) : UmlPackage
  UmlCom::send_cmd(packageGlobalCmd, findPhpNamespaceCmd, _identifier, n);

  return (UmlPackage *) UmlBaseItem::read_();
!!!183680.java!!!	findPhpNamespace(in n : string) : UmlPackage
  UmlCom.send_cmd(CmdFamily.packageGlobalCmd, PackageGlobalCmd._findPhpNamespaceCmd, identifier_(), n);
  return (UmlPackage) UmlBaseItem.read_();
!!!183808.cpp!!!	pythonDir() : string
  read_if_needed_();
  
  return _python_dir;
!!!183808.java!!!	pythonDir() : string
  read_if_needed_();
  
  return _python_dir;
!!!183936.cpp!!!	set_PythonDir(in s : string) : bool
  return set_it_(_python_dir, s, setPythonDirCmd);
!!!183936.java!!!	set_PythonDir(in s : string) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setPythonDirCmd, s);
  UmlCom.check();

  _python_dir = s;
!!!184064.cpp!!!	pythonPackage() : string
  read_if_needed_();
  
  return _python_package;
!!!184064.java!!!	pythonPackage() : string
  read_if_needed_();
  
  return _python_package;
!!!184192.cpp!!!	set_PythonPackage(in s : string) : bool
  return set_it_(_python_package, s, setPythonPackageCmd);
!!!184192.java!!!	set_PythonPackage(in s : string) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setPythonPackageCmd, s);
  UmlCom.check();

  _python_package = s;
!!!184320.cpp!!!	findPythonPackage(in n : string) : UmlPackage
  UmlCom::send_cmd(packageGlobalCmd, findPythonPackageCmd, _identifier, n);
  
  return (UmlPackage *) UmlBaseItem::read_();  
!!!184320.java!!!	findPythonPackage(in n : string) : UmlPackage
  UmlCom.send_cmd(CmdFamily.packageGlobalCmd, PackageGlobalCmd._findPythonPackageCmd,
		  identifier_(), n);
  
  return (UmlPackage) UmlBaseItem.read_();  
!!!184448.cpp!!!	idlDir() : string
  read_if_needed_();
  
  return _idl_dir;
!!!184448.java!!!	idlDir() : string
  read_if_needed_();
  
  return _idl_dir;
!!!184576.cpp!!!	set_IdlDir(in s : string) : bool
  return set_it_(_idl_dir, s, setIdlDirCmd);
!!!184576.java!!!	set_IdlDir(in s : string) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setIdlDirCmd, s);
  UmlCom.check();

  _idl_dir = s;
!!!184704.cpp!!!	idlModule() : string
  read_if_needed_();
  
  return _idl_module;
!!!184704.java!!!	idlModule() : string
  read_if_needed_();
  
  return _idl_module;
!!!184832.cpp!!!	set_IdlModule(in s : string) : bool
  return set_it_(_idl_module, s, setIdlModuleCmd);
!!!184832.java!!!	set_IdlModule(in s : string) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setIdlModuleCmd, s);
  UmlCom.check();

  _idl_module = s;
!!!184960.cpp!!!	findIdlModule(in n : string) : UmlPackage
  UmlCom::send_cmd(packageGlobalCmd, findIdlModuleCmd, _identifier, n);
  
  return (UmlPackage *) UmlBaseItem::read_();  
!!!184960.java!!!	findIdlModule(in n : string) : UmlPackage
  UmlCom.send_cmd(CmdFamily.packageGlobalCmd, PackageGlobalCmd._findIdlModuleCmd,
		  identifier_(), n);
  
  return (UmlPackage) UmlBaseItem.read_();  
!!!185088.cpp!!!	mysqlDir() : string
  read_if_needed_();

  return _mysql_dir;
!!!185088.java!!!	mysqlDir() : string
  read_if_needed_();

  return _mysql_dir;
!!!185216.cpp!!!	set_MysqlDir(in s : string) : bool
  return set_it_(_mysql_dir, s, setMysqlDirCmd);
!!!185216.java!!!	set_MysqlDir(in s : string) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setMysqlDirCmd, s);
  UmlCom.check();

  _mysql_dir = s;
!!!185344.cpp!!!	getProject() : UmlPackage
  UmlCom::send_cmd(packageGlobalCmd, getProjectCmd);
  
  return (UmlPackage *) UmlBaseItem::read_();  
!!!185344.java!!!	getProject() : UmlPackage
  UmlCom.send_cmd(CmdFamily.packageGlobalCmd, PackageGlobalCmd._getProjectCmd);
  
  return (UmlPackage) UmlBaseItem.read_();  
!!!185472.cpp!!!	isProjectModified() : bool
  UmlCom::send_cmd(packageGlobalCmd, isProjectModifiedCmd);
  
  return UmlCom::read_bool();
!!!185472.java!!!	isProjectModified() : bool
  UmlCom.send_cmd(CmdFamily.packageGlobalCmd, PackageGlobalCmd._isProjectModifiedCmd);
  
  return UmlCom.read_bool();
!!!185600.cpp!!!	saveProject() : void
  UmlCom::send_cmd(packageGlobalCmd, saveProjectCmd);
!!!185600.java!!!	saveProject() : void
  UmlCom.send_cmd(CmdFamily.packageGlobalCmd, PackageGlobalCmd._saveProjectCmd);
!!!185728.cpp!!!	loadProject(inout p : string) : void
  UmlCom::send_cmd(miscGlobalCmd, loadCmd, (const char *) p);
!!!185728.java!!!	loadProject(inout p : string) : void
  UmlCom.send_cmd(CmdFamily.miscGlobalCmd, MiscGlobalCmd._loadCmd, p);
!!!185856.cpp!!!	updateProfiles() : void
  UmlCom::send_cmd(packageGlobalCmd, updateProfileCmd);
!!!185856.java!!!	updateProfiles() : void
  UmlCom.send_cmd(CmdFamily.packageGlobalCmd, PackageGlobalCmd._updateProfileCmd);
!!!185984.cpp!!!	unload(in rec : bool, in del : bool) : void
  _assoc_diagram = 0;
#ifdef WITHCPP
  _cpp_src_dir = 0;
  _cpp_h_dir = 0;
  _cpp_namespace = 0;
#endif
#ifdef WITHJAVA
  _java_dir = 0;
  _java_package = 0;
#endif
#ifdef WITHPHP
  _php_dir = 0;
#endif
#ifdef WITHPYTHON
  _python_dir = 0;
  _python_package = 0;
#endif
#ifdef WITHMYSQL
  _mysql_dir = 0;
#endif
#ifdef WITHIDL
  _idl_dir = 0;
  _idl_module = 0;
#endif
  UmlBaseItem::unload(rec, del);
!!!185984.java!!!	unload(in rec : bool, in del : bool) : void
  _assoc_diagram = null;
  _cpp_src_dir = null;
  _cpp_h_dir = null;
  _cpp_namespace = null;
  _java_dir = null;
  _java_package = null;
  _php_dir = null;
  _python_dir = null;
  _python_package = null;
  _mysql_dir = null;
  _idl_dir = null;
  _idl_module = null;
  super.unload(rec, del);
!!!186112.cpp!!!	read_uml_() : void
  _assoc_diagram = (UmlDiagram *) UmlBaseItem::read_();
  UmlBaseItem::read_uml_();
!!!186112.java!!!	read_uml_() : void
  _assoc_diagram = (UmlDiagram) UmlBaseItem.read_();
  super.read_uml_();
!!!186240.cpp!!!	read_cpp_() : void
  _cpp_src_dir = UmlCom::read_string();
  _cpp_h_dir = UmlCom::read_string();
  _cpp_namespace = UmlCom::read_string();
!!!186240.java!!!	read_cpp_() : void
  _cpp_src_dir = UmlCom.read_string();
  _cpp_h_dir = UmlCom.read_string();
  _cpp_namespace = UmlCom.read_string();
!!!186368.cpp!!!	read_java_() : void
  _java_dir = UmlCom::read_string();
  _java_package = UmlCom::read_string();
!!!186368.java!!!	read_java_() : void
  _java_dir = UmlCom.read_string();
  _java_package = UmlCom.read_string();
!!!186496.cpp!!!	read_php_() : void
  _php_dir = UmlCom::read_string();
  _php_namespace = UmlCom::read_string();
!!!186496.java!!!	read_php_() : void
  _php_dir = UmlCom.read_string();
  _php_namespace = UmlCom.read_string();
!!!186624.cpp!!!	read_python_() : void
  _python_dir = UmlCom::read_string();
  _python_package = UmlCom::read_string();
!!!186624.java!!!	read_python_() : void
  _python_dir = UmlCom.read_string();
  _python_package = UmlCom.read_string();
!!!186752.cpp!!!	read_idl_() : void
  _idl_dir = UmlCom::read_string();
  _idl_module = UmlCom::read_string();
!!!186752.java!!!	read_idl_() : void
  _idl_dir = UmlCom.read_string();
  _idl_module = UmlCom.read_string();
!!!186880.cpp!!!	read_mysql_() : void
  _mysql_dir = UmlCom::read_string();
!!!186880.java!!!	read_mysql_() : void
  _mysql_dir = UmlCom.read_string();
!!!187008.cpp!!!	UmlBasePackage(in id : item_id, in n : string)
  _assoc_diagram = 0;
