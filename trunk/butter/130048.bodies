class UmlBaseExtraArtifactDefinition
!!!153856.cpp!!!	create(inout parent : UmlArtifact, inout s : str) : UmlExtraArtifactDefinition
  return (UmlExtraArtifactDefinition *) parent->create_(anExtraArtifactDefinition, s);
!!!153856.java!!!	create(inout parent : UmlArtifact, inout s : str) : UmlExtraArtifactDefinition
  return (UmlExtraArtifactDefinition) parent.create_(anItemKind.anExtraArtifactDefinition, s);
!!!153984.cpp!!!	kind() : anItemKind
  return anExtraArtifactDefinition;
!!!153984.java!!!	kind() : anItemKind
  return anItemKind.anExtraArtifactDefinition;
!!!154112.cpp!!!	cppDecl() : string
  read_if_needed_();
  return _cpp_decl;
!!!154112.java!!!	cppDecl() : string
  read_if_needed_();
  return _cpp_decl;
!!!154240.cpp!!!	set_CppDecl(in v : str) : bool
  return set_it_(_cpp_decl, v, setCppDeclCmd);
!!!154240.java!!!	set_CppDecl(in v : str) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setCppDeclCmd, v);
  UmlCom.check();

  _cpp_decl = v;
!!!154368.cpp!!!	cppDef() : string
  read_if_needed_();
  return _cpp_def;
!!!154368.java!!!	cppDef() : string
  read_if_needed_();
  return _cpp_def;
!!!154496.cpp!!!	set_CppDef(in v : str) : bool
  return set_it_(_cpp_def, v, setCppDefCmd);
!!!154496.java!!!	set_CppDef(in v : str) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setCppDefCmd, v);
  UmlCom.check();

  _cpp_def = v;
!!!154624.cpp!!!	javaDecl() : string
  read_if_needed_();
  return _java_decl;
!!!154624.java!!!	javaDecl() : string
  read_if_needed_();
  return _java_decl;
!!!154752.cpp!!!	set_JavaDecl(in v : str) : bool
  return set_it_(_java_decl, v, setJavaDeclCmd);
!!!154752.java!!!	set_JavaDecl(in v : str) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setJavaDeclCmd, v);
  UmlCom.check();

  _java_decl = v;
!!!154880.cpp!!!	phpDecl() : string
  read_if_needed_();
  return _php_decl;
!!!154880.java!!!	phpDecl() : string
  read_if_needed_();
  return _php_decl;
!!!155008.cpp!!!	set_PhpDecl(in v : str) : bool
  return set_it_(_php_decl, v, setPhpDeclCmd);
!!!155008.java!!!	set_PhpDecl(in v : str) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setPhpDeclCmd, v);
  UmlCom.check();

  _php_decl = v;
!!!155136.cpp!!!	pythonDecl() : string
  read_if_needed_();
  return _python_decl;
!!!155136.java!!!	pythonDecl() : string
  read_if_needed_();
  return _python_decl;
!!!155264.cpp!!!	set_PythonDecl(in v : str) : bool
  return set_it_(_python_decl, v, setPhpDeclCmd);
!!!155264.java!!!	set_PythonDecl(in v : str) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setPhpDeclCmd, v);
  UmlCom.check();

  _python_decl = v;
!!!155392.cpp!!!	idlDecl() : string
  read_if_needed_();
  return _idl_decl;
!!!155392.java!!!	idlDecl() : string
  read_if_needed_();
  return _idl_decl;
!!!155520.cpp!!!	set_IdlDecl(in v : str) : bool
  return set_it_(_idl_decl, v, setPhpDeclCmd);
!!!155520.java!!!	set_IdlDecl(in v : str) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setPhpDeclCmd, v);
  UmlCom.check();

  _idl_decl = v;
!!!155648.cpp!!!	mysqlDecl() : string
  read_if_needed_();
  return _mysql_decl;
!!!155648.java!!!	mysqlDecl() : string
  read_if_needed_();
  return _mysql_decl;
!!!155776.cpp!!!	set_MysqlDecl(in v : str) : bool
  return set_it_(_mysql_decl, v, setPhpDeclCmd);
!!!155776.java!!!	set_MysqlDecl(in v : str) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setPhpDeclCmd, v);
  UmlCom.check();

  _mysql_decl = v;
!!!155904.cpp!!!	unload(in rec : bool, in del : bool) : void
#ifdef WITHCPP
  _cpp_def = 0;
  _cpp_decl = 0;
#endif
#ifdef WITHJAVA
  _java_decl = 0;
#endif
#ifdef WITHPHP
  _php_decl = 0;
#endif
#ifdef WITHPYTHON
  _python_decl = 0;
#endif
#ifdef WITHIDL
  _idl_decl = 0;
#endif
#ifdef WITHMYSQL
  _mysql_decl = 0;
#endif
  UmlBaseItem::unload(rec, del);
!!!155904.java!!!	unload(in rec : bool, in del : bool) : void
  _cpp_def = null;
  _cpp_decl = null;
  _java_decl = null;
  _idl_decl = null;
  _php_decl = null;
  _python_decl = null;
  _mysql_decl = null;
  super.unload(rec, del);
!!!156160.cpp!!!	read_cpp_() : void
  _cpp_decl = UmlCom::read_string();
  _cpp_def = UmlCom::read_string();
!!!156160.java!!!	read_cpp_() : void
  _cpp_decl = UmlCom.read_string();
  _cpp_def = UmlCom.read_string();
!!!156288.cpp!!!	read_java_() : void
  _java_decl = UmlCom::read_string();
!!!156288.java!!!	read_java_() : void
  _java_decl = UmlCom.read_string();
!!!156416.cpp!!!	read_php_() : void
  _php_decl = UmlCom::read_string();
!!!156416.java!!!	read_php_() : void
  _php_decl = UmlCom.read_string();
!!!156544.cpp!!!	read_python_() : void
  _python_decl = UmlCom::read_string();
!!!156544.java!!!	read_python_() : void
  _python_decl = UmlCom.read_string();
!!!156672.cpp!!!	read_idl_() : void
  _idl_decl = UmlCom::read_string();
!!!156672.java!!!	read_idl_() : void
  _idl_decl = UmlCom.read_string();
!!!156800.cpp!!!	read_mysql_() : void
  _mysql_decl = UmlCom::read_string();
!!!156800.java!!!	read_mysql_() : void
  _mysql_decl = UmlCom.read_string();
