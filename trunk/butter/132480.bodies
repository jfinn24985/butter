class UmlBaseUseCase
!!!195840.cpp!!!	create(inout parent : UmlItem, in s : str) : UmlUseCase
  return (UmlUseCase *) parent->create_(anUseCase, s);
!!!195840.java!!!	create(inout parent : UmlItem, in s : str) : UmlUseCase
  return (UmlUseCase) parent.create_(anItemKind.anUseCase, s);
!!!195968.cpp!!!	kind() : anItemKind
  return anUseCase;
!!!195968.java!!!	kind() : anItemKind
  return anItemKind.anUseCase;
!!!196096.cpp!!!	associatedDiagram() : UmlUseCaseDiagram
  read_if_needed_();
  
  return _assoc_diagram;
!!!196096.java!!!	associatedDiagram() : UmlUseCaseDiagram
  read_if_needed_();
  
  return _assoc_diagram;
!!!196224.cpp!!!	set_AssociatedDiagram(inout d : UmlUseCaseDiagram) : bool
  UmlCom::send_cmd(_identifier, setAssocDiagramCmd, (d == 0) ? (void *) 0 : ((UmlBaseItem *) d)->_identifier);
  if (UmlCom::read_bool()) {
    _assoc_diagram = d;
    return TRUE;
  }
  else
    return FALSE;
!!!196224.java!!!	set_AssociatedDiagram(inout d : UmlUseCaseDiagram) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setAssocDiagramCmd, (d == null) ? (long) 0 : d.identifier_());
  UmlCom.check();
  
  _assoc_diagram = d;

!!!196352.cpp!!!	extensionPoints() : string
  read_if_needed_();
  return _extension_points;
!!!196352.java!!!	extensionPoints() : string
  read_if_needed_();
  return _extension_points;
!!!196480.cpp!!!	set_ExtensionPoints(in v : str) : bool
  return set_it_(_extension_points, v, replaceExceptionCmd);
!!!196480.java!!!	set_ExtensionPoints(in v : str) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.replaceExceptionCmd, v);
  UmlCom.check();

  _extension_points = v;
!!!196608.cpp!!!	read_uml_() : void
  _assoc_diagram = (UmlUseCaseDiagram *) UmlBaseItem::read_();
  UmlBaseItem::read_uml_();
  _extension_points = UmlCom::read_string();
!!!196608.java!!!	read_uml_() : void
  _assoc_diagram = (UmlUseCaseDiagram) UmlBaseItem.read_();
  super.read_uml_();
  _extension_points = UmlCom.read_string();
