class verb_checkout
!!!151721.python!!!	do_end_load(in self : )
# Build python evaluation string
type_ = self.make_substitutions(self.get (u"type", u"svn"))
( cmd_, msg_ ) = verb_checkout._checkout[type_]
phrase_ = u"""self.system_call (r"%(_command_)s", r\"\"\"%(_error_)s\"\"\")\n"""
todir_ = self.get (u"to-dir", u"-d %(base)s")
cmd_name_ = self.get (type_ + u"-command", type_)
self.substitutions(None, { u"_command_": cmd_, u"_message_": msg_, u"_to_dir_": todir_, u"_error_":  verb._error[self.get (u"error",u"fatal")], u"_cmd_name_": cmd_name_ } )
self.reset_action ()
self.add_action (self.make_substitutions(phrase_))

if _DEBUG:
  tmp_ = self.start("debug", {"#title":"Verb checkout data:"})
  print self.get_action ()
  del tmp_
pass
!!!146601.python!!!	make(in elemname : unistr, in elemattr : dict) : object_interface
assert elemname == verb.element_name
assert elemattr.has_key (verb.type_attr)
if elemattr[verb.type_attr] == verb_checkout.type_value:
  return verb_checkout()
else:
  return None
